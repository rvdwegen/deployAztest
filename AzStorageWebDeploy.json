{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appNamePrefix": {
            "maxLength": 14,
            "type": "String",
            "metadata": {
                "description": "The name of the app that you wish to create."
            }
        },
        "customDomainName": {
            "type": "string",
            "defaultValue": "mysite.customdomain.com",
            "metadata": {
              "description": "Custom Domain Name"
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "The location of the storage."
            }
        }
    },
    "variables": {
        "cdnProfileName": "[format('cdnpro-{0}-{1}', parameters('appNamePrefix'), substring(uniqueString(resourceGroup().id, deployment().name), 0, 4))]",
        "cdnEndpointName": "[format('cdnend-{0}-{1}', parameters('appNamePrefix'), substring(uniqueString(resourceGroup().id, deployment().name), 0, 4))]",
        "originHostHeader": "[concat(variables('storageAccountName'), string('.z6.web.core.windows.net'))]",
        "originName": "[concat(variables('storageAccountName'), string('-z6-web-core-windows-net'))]",
        "customDomain": "[replace(parameters('customDomainName'),'.','-')]",
        "storageAccountName": "[format('sto{0}{1}', parameters('appNamePrefix'), substring(uniqueString(resourceGroup().id, deployment().name), 0, 4))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-05-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Cdn/profiles",
            "apiVersion": "2021-06-01",
            "name": "[variables('cdnProfileName')]",
            "location": "Global",
            "sku": {
                "name": "Standard_Microsoft"
            },
            "kind": "cdn",
            "properties": {}
        },
        {
            "type": "Microsoft.Cdn/profiles/endpoints",
            "apiVersion": "2021-06-01",
            "name": "[concat(variables('cdnProfileName'), '/', variables('cdnProfileName'))]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', variables('cdnProfileName'))]"
            ],
            "properties": {
                "originHostHeader": "[variables('originHostHeader')]",
                "contentTypesToCompress": [
                    "application/eot",
                    "application/font",
                    "application/font-sfnt",
                    "application/javascript",
                    "application/json",
                    "application/opentype",
                    "application/otf",
                    "application/pkcs7-mime",
                    "application/truetype",
                    "application/ttf",
                    "application/vnd.ms-fontobject",
                    "application/xhtml+xml",
                    "application/xml",
                    "application/xml+rss",
                    "application/x-font-opentype",
                    "application/x-font-truetype",
                    "application/x-font-ttf",
                    "application/x-httpd-cgi",
                    "application/x-javascript",
                    "application/x-mpegurl",
                    "application/x-opentype",
                    "application/x-otf",
                    "application/x-perl",
                    "application/x-ttf",
                    "font/eot",
                    "font/ttf",
                    "font/otf",
                    "font/opentype",
                    "image/svg+xml",
                    "text/css",
                    "text/csv",
                    "text/html",
                    "text/javascript",
                    "text/js",
                    "text/plain",
                    "text/richtext",
                    "text/tab-separated-values",
                    "text/xml",
                    "text/x-script",
                    "text/x-component",
                    "text/x-java-source"
                ],
                "isCompressionEnabled": true,
                "isHttpAllowed": true,
                "isHttpsAllowed": true,
                "queryStringCachingBehavior": "IgnoreQueryString",
                "origins": [
                    {
                        "name": "[variables('originName')]",
                        "properties": {
                            "hostName": "[variables('originHostHeader')]",
                            "httpPort": 80,
                            "httpsPort": 443,
                            "originHostHeader": "[variables('originHostHeader')]",
                            "priority": 1,
                            "weight": 1000,
                            "enabled": true
                        }
                    }
                ],
                "originGroups": [],
                "geoFilters": []
            }
        }
    ]
}
